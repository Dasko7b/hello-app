name: CI/CD Pipeline - FastAPI App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: hello-app
  DOCKER_REGISTRY: docker.io
  MANIFESTS_REPO: Dasko7b/hello-manifests
  MANIFESTS_BRANCH: main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install fastapi uvicorn

      - name: Run tests (exemplo simples)
        run: |
          python -c "from main import app; import sys; sys.exit(0)"  # teste de importação

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix={{date 'YYYYMMDD'}}-,suffix=-{{sha}}
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  update-manifests:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout manifests repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.MANIFESTS_REPO }}
          ref: ${{ env.MANIFESTS_BRANCH }}
          token: ${{ secrets.GITHUB_TOKEN }}
          path: manifests

      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Update image tag in deployment.yaml
        run: |
          NEW_TAG="${{ fromJSON(steps.meta.outputs.json).tags[0] }}"
          sed -i "s|image:.*|image: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${NEW_TAG}|" manifests/deployment.yaml

      - name: Commit and push changes
        run: |
          cd manifests
          git add deployment.yaml
          git commit -m "CI: Update image to ${{ fromJSON(steps.meta.outputs.json).tags[0] }}"
          git push origin ${{ env.MANIFESTS_BRANCH }}