name: CI/CD Pipeline - FastAPI App

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: hello-app
  MANIFESTS_REPO: Dasko7b/hello-manifests
  MANIFESTS_BRANCH: main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install fastapi uvicorn

      - name: Run tests
        run: |
          python -c "from main import app; print('App imported successfully')"

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    outputs:
      image_tag: ${{ steps.generate-tag.outputs.tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate tag
        id: generate-tag
        run: |
          TAG="${GITHUB_SHA:0:7}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Generated tag: $TAG"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.generate-tag.outputs.tag }}
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  create-pr-for-manifests:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Setup SSH key manually
        run: |
          # Criar diretório .ssh
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          
          # Salvar a chave privada
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Configurar known_hosts
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
          
          # Testar conexão
          ssh -T git@github.com

      - name: Checkout manifests repo
        run: |
          git clone git@github.com:${{ env.MANIFESTS_REPO }}.git manifests-repo
          cd manifests-repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create new branch for update
        run: |
          cd manifests-repo
          BRANCH_NAME="update-image-${{ needs.build-and-push.outputs.image_tag }}"
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Update image tag in deployment.yaml
        run: |
          cd manifests-repo
          NEW_IMAGE="${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.image_tag }}"
          echo "Updating image to: $NEW_IMAGE"
          
          if [ ! -f "deployment.yaml" ]; then
            echo "❌ deployment.yaml not found! Available files:"
            ls -la
            exit 1
          fi
          
          sed -i "s|image:.*|image: $NEW_IMAGE|g" deployment.yaml
          echo "✅ Updated deployment.yaml:"
          cat deployment.yaml

      - name: Commit changes
        run: |
          cd manifests-repo
          git add deployment.yaml
          git status
          git commit -m "CI: Update image to ${{ needs.build-and-push.outputs.image_tag }}"

      - name: Push branch to remote
        run: |
          cd manifests-repo
          git push origin ${{ env.BRANCH_NAME }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: manifests-repo
          branch: ${{ env.BRANCH_NAME }}
          base: ${{ env.MANIFESTS_BRANCH }}
          title: "CI: Update image to ${{ needs.build-and-push.outputs.image_tag }}"
          body: |
            Automatic PR generated by CI/CD pipeline
            
            - **New image**: `${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.image_tag }}`
            - **Source commit**: ${{ github.sha }}
            - **Triggered by**: ${{ github.actor }}
          labels: "ci-cd,automated"
          delete-branch: true